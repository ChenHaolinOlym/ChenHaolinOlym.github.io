<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Programming Paradigms]]></title>
    <url>%2F2019%2F12%2F19%2Fnote%2FProgramming%20Paradigms%2FProgramming-Paradigms%2F</url>
    <content type="text"><![CDATA[NetworkOverviewThe History of C++C++ Versions The C++ programming language was developed by Bjarne Stroustrup at Bell Labs since 1979, as an extension of the C language as he wanted an efficient and flexible language similar to C, which also provided high-level features for program organization. C++ was initially standardized in 1998 by the International Organization for Standardization (ISO) as C++98, which was then amended by the C++03, C++11 and C++14 standards. The current C++17 standard supersedes these with new features and an enlarged standard library. C++20 is the next planned standard thereafter, keeping with the current streak of a new version every three years. Compiler vs. Interpreter A compiler takes entire program and converts it into object code which is typically stored in a file. The object code is also refereed as binary code and can be directly executed by the machine after linking. (C and C++) An interpreter directly executes instructions written in a programming or scripting language without previously converting them to an object code or machine code. (Python and Matlab) IDEIDE (Integrated Development Environment): a source code editor, which sometimes containing, a class browser, an object browser, and a class hierarchy diagram, for use in object-oriented software development GUI (Graphical User Interface) construction tools a version control system build automation tools (must at least contain a compiler or an interpreter, or both, sometimes a linker too) a debugger Components in C++ CodeComment multi-line comments /* Comments line 1Comments line 2 Comments line 3 ***/** single-line comments // Comments line 1// Comments line 2// Comments line 3 LibrariesLibraries are collections of previously written tools that perform useful operations. #include &lt;iostream&gt; instructs the compiler to read the relevant definitions from what is called a header (.h) file for you own libraries, write #include “myownlib.h” namespaces: Works like a folder name. It ensures that all the identifiers within it have unique names so that they can be easily identified. The standard C++ libraries use a namespace called std, which means that you cannot refer to the names defined in standard header files like iostream.h unless you let the compiler know to which namespace those definitions belong. FunctionA function is a named section of code that performs a specific operation. Every C++ program must contain a function with the name main. Function main is called when the program starts up. When main has finished its work and returns, execution of the program ends. A concise description of other functions, called a function prototype, must appear before the main function. VariablesA variable is a named address for storing a type of value. You must declare a variable before you can use it The declaration establishes the name and type, most cases initial value Most common form of declaration: type name = value; The name and type of a variable are fixed. The value changes whenever you assign a new value to the variable. Name Convention Variable name is case sensitive. The name must start with a letter or the underscore character (_). All other characters in the name must be letters, digits, or the underscore. No spaces or other special characters are permitted in names. Use meaningful words, but must not be one of the reserved keywords. Reserved Keywords Scope local variable global variable instance variable Constants Unlike a variable, which is a placeholder for a value that can be updated as the program runs, the value of a constant does not change during the course of a program. Format of a constant depends on its type: Integral constants consist of a string of digits Floating-point constants include a decimal point The two constants of type boolean are true and false Character and Strings will be discussed later\ declare using const: const double PI = 3.14159265358979323846; Data Types A data type is defined by a domain, which is the set of values that belong to that type, and a set of operations, which defines the behavior of that type. C++ defines a set of primitive types to represent simple data. Four most used: int: represent integers double: represent floating point numbers bool: represent boolean value char: represent single ASCII characters Operators and Operands +: Addition -: Subtraction(binary), Negative of(unary) *: Multiplication /: Division %: Remainder Division and Type CastsIn C++, whenever you apply a binary operator to numeric values, the result will be of type int if both operands are of type int, but will be a double if either operand is a double. So if two int do the division, the computer will throw away the fractional part. Two maintain the fractional part, you need to use the type name as a function call to perform a type cast The Remainder Operator computes the remainder when the first divided by the second applies only to integer operands only make sense when both operands are positive Precedence Precendence rule: Parentheses may be used to change the order of operations. Assignment Statementsvariable = expression; Shorthandvariable op= expression;, op is any of C++’s binary operators. The effect of it is the same as variable = variable op (expression); Incrment and Decrement Operatorx++; ++x; is the same as x += 1; or even x = x + 1;. -- is the same case. Boolean Expression Relational Operators ==: equals &lt;: less than &gt;: greater than !=: not equals &lt;=: less than or equal to &gt;=: greater than or equal to Logical Operators &amp;&amp;: logical AND ||: logical OR !: logical NOT It is not legal in C++ to use more than one relational operator such as $0 \leq x \leq 9$. Short-circuit Evaluation In C++ uses a strategy called short-circuit mode in which it evaluates the right operand only if it needs to do so. So we can use &amp;&amp; and || to prevent execution errors such as “division by zero” error Statements Statements in C++ fall into three basic types: Simple statements: formed by adding a semicolon to the end of a C++ expression. Compound statements (also called blocks) : sequences of statements enclosed in curly braces. Control statements: fall into two categories: Conditional statements that specify some kind of test Iterative statements that specify repetition if Statementif statement has three forms: 123if (condition) &#123; // statements to be executed if the condition is true&#125; 12345if (condition) &#123; // statements to be executed if the condition is true&#125; else &#123; // statements to be executed if the condition is false&#125; 12345678if (condition1) &#123; // statements to be executed if the condition1 is true&#125; else if (condition2) &#123; // statements to be executed if the condition2 is true// . . . more else/if conditions . . .&#125; else &#123; // statements to be executed if all the conditions is false&#125; The ?: OperatorC++ provides a more compact way to express conditional execution. This feature is called the ?: operator (pronounced question-mark-colon). The operator has the following form: condition ? expression1 : expression2 First determines the value of condition. If condition is true, C++ evaluates expression1 and uses that as the value; if condition is false, C++ evaluates expression2 instead. switch StatementThe switch statement provides a convenient syntax for choosing among a set of possible paths: 123456789101112switch ( expression ) &#123; case v1: // statements to be executed if expression = v1 break; case v2: // statements to be executed if expression = v2 break; // . . . more case clauses if needed . . . default: // statements to be executed if no values match break;&#125; while Statement123while ( condition ) &#123; // statements to be repeated&#125; for Statement123for ( init ; test ; step ) &#123; // statements to be repeated&#125; C++ evaluates a for statement by executing the following steps: Evaluate init, which typically declares a control variable. Evaluate test and exit from the loop if the value is false. Execute the statements in the body of the loop. Evaluate step, which usually updates the control variable. Return to step 2 to begin the next loop cycle. FunctionsThe Advantage of Using Functions Functions allow you to shorten a program by allowing you to include the code for a particular operation once and then reuse it as often as you want in a variety of different contexts, typically with different arguments. Functions make programs easier to read by allowing you to invoke an entire sequence of operations using a single name (abstraction) that corresponds to a higher-level understanding of the purpose of the function. Functions simplify program maintenance by allowing you to divide a large program into smaller, more manageable pieces. This process is called decomposition. Top-down design/stepwise refinement Define123type name (parameter list) &#123; // statements in the function body&#125; where type indicates what type the function returns, name is the name of the function, and parameter list is a list of variable declarations used to hold the values of each argument. statements in the function body implement the function (e.g., the algorithm), at least including a return statement: return expression; Functions that return Boolean results are called predicate functions. Functions that return no value at all are called procedure, using void as the result type. All functions need to be declared before they are called by specifying a prototype consisting of the header line followed by a semicolon. Prototype A function prototype is simply the header line of the function followed by a semicolon, which you put in front of the main function so that the compiler knows what arguments the function requires and what type of value it returns, before you actually define the function. If you always define functions before you call them, prototypes are not required. Arguments vs. Parameters A parameter is a placeholder for one of the arguments supplied in the function call and acts in most respects just like a local variable. A parameter is a variable in a function declaration and definition. An argument is an expression used when calling the function. When a function is called, the arguments are the data (actual values) you pass into the function’s parameters. Overload Functions can be overloaded, which means that you can define several different functions with the same name as long as the correct version can be determined by looking at the number and types of the arguments. The pattern of arguments (i.e., the number and types of the arguments but not the parameter names) required for a particular function is called its signature. The primary advantage of using overloading is that doing so makes it easier for you as a programmer to keep track of different function names for the same operation when it is applied in slightly different contexts. The return type cannot be used to differentiate overloaded functions. Optional Functions can specify optional parameters by including an initializer after the variable name. When you use default values for optional parameters, it helps to keep the following rules in mind: The specification of the default value appears only in the function prototype and not in the function definition. Any optional parameters must appear at the end of the parameter list. CallThe Mechanics of Calling a FunctionWhen you invoke a function, the following actions occur: The calling function evaluates the argument expressions in its own context. C++ then copies each argument value into the corresponding parameter variable, which is allocated in a newly assigned region of memory called a stack frame. This assignment follows the order in which the arguments appear: the first argument is copied into the first parameter variable, and so on. C++ then evaluates the statements in the function body, using the new stack frame to look up the values of local variables. When C++ encounters a return statement, it computes the return value and substitutes that value in place of the call. C++ then discards the stack frame for the called function and returns to the caller, continuing from where it left off. Call by ReferenceFunction will only modify the local copy of the arguments. If you want to modify the arguments themselves, use &amp; between type and name. 12345void swap(int &amp; x, int &amp; y) &#123; int tmp = x; x = y; y = tmp;&#125; LibrariesIn computer science, a library is a collection of non-volatile resources used by computer programs, often to develop software. Libraries can be viewed from two perspectives. Code that uses a library is called a client. The code for the library itself is called the implementation. The point at which the client and the implementation meet is called the interface, which serves as both a barrier and a communication channel: Sharing and reuse Abstraction and hiding C++ Libraries A collection of classes and functions, which are written in the core language and part of the C++ ISO Standard itself. Features of the C++ Standard Library are declared within the std namespace Containers: vector, list, queue, stack, map, set, etc. General: algorithm, functional, iterator, memory, etc. Strings Streams and Input/Output: iostream, fstream, sstream, etc. Localization Language support Thread support library Numerics library C standard library: cmath, cctype, cstring, cstdio, cstdlib, etc. Creating Library Interfaces In C++, libraries are made available to clients through the use of an interface file that has the suffix .h. In C++, the header file contains only the prototypes of the exported functions. The implementations of those functions appear in the corresponding .cpp file. StringsRelationship Between C and C++ One of the fundamental design principles of C++ was that it would contain C as a subset, which is also part of the reason behind the success of C++. This design strategy makes it possible to convert applications from C to C++ incrementally. The downside of this strategy is that the design of C++ is less consistent and integrated than it might otherwise be. CharacterStringStreamsCollectionsObject-oriented programmingRecursionAlgorithmic AnaysisThe C++ Memory ModelEfficiency and RepresentationLinear StructuresInheritanceProgramming Paradigms]]></content>
      <categories>
        <category>note</category>
        <category>Programming Paradigms</category>
      </categories>
      <tags>
        <tag>Programming Paradigms</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[General Biology]]></title>
    <url>%2F2019%2F12%2F19%2Fnote%2FGeneral%20Biology%2FGeneral-Biology%2F</url>
    <content type="text"><![CDATA[NetworkIntroductionBiology is the scientific study of life.Hypothesis: a tentative answer to a question or a proposed explanation for a set of observations. Theory: a comprehensive explanation supported by abundant evidence, and general enough to spin off many new testable hypotheses. Hypothesis-Driven Science Once a hypothesis is formed, an investigator can make predictions about what results are expected if that hypothesis is correct. We then test the hypothesis by performing an experiment to see whether or not the results are as predicted. The Properties of Life Order Regulation Growth and development Energy processing Response to environment Reproduction Evolution Three Domains of LifeSpicies: A species is generally defined as a group of organisms that have the potential to interbreed with one another in nature to produce healthy offspring. Bacteria Archaea Eukarya Bacteria and Archaea have prokaryotic cells. Eukarya have eukaryotic cells. KingdomsThe Domain Eukarya in turn includes three smaller divisions called kingdoms: Kingdom Plantae Kingdom Fungi Kingdom Animalia Most members of the three kingdoms are multicellular. These three multicellular kingdoms are distinguished partly by how the organisms obtain food： Plants produce their own sugars and other foods by photosynthesis. Fungi are mostly decomposers, digesting dead organisms and organic wastes. Animals obtain food by ingesting and digesting other organisms. Those eukaryotes that do not fit into any of the three kingdoms fall into a catch-all group called the protists. Most protists are single-celled; they include microscopic organisms such as amoebas But protists also include certain multicellular forms, such as seaweeds. Scientists are in the process of organizing protists into multiple kingdoms, although they do not yet agree on exactly how to do this. Major Themes in Biology Evolution Structure/Function Information Flow Energy Transformations Interconnection within Systems EvolutionEvolution is the fundamental principle of life and the core theme that unifies all of biology. The theory of evolution by natural selection, first described by Charles Darwin more than 150 years ago, is the one idea that makes sense of everything we know about living organisms. The Darwinian View of LifeThe evolutionary view of life came into focus in 1859 when Charles Darwin published On the Origin of Species by Means of Natural Selection. Natural selection is the mechanism for descent with modification. The product of natural selection is adaptation, the accumulation of variations in a population over time. Observing Artifucial SelectionArtificial selection is the purposeful breeding of domesticated plants and animals by humans. Structure/FunctionWithin biological systems, structure (the shape of something) and function (what it does) are often related, with each providing insight into the other. Structure — AnatomyFunction — Physiology Information FlowFor life’s functions to proceed in an orderly manner, information must be stored, transmitted, and used. Energy Transformations Various cellular activities of life are work, such as movement, growth, and reproduction, and work requires energy. Life is made possible by the input of energy, primarily from the sun, and the transformation of energy from one form to another. Interconnection within SystemsHow life is studied at different scales? The study of life extends from the microscopic scale of the molecules and cells that make up organismsto the global scale of the entire living planet. CellsEssential Chemistry of BiologyBasic ChemistryMatters: Elements and Compounds Of the naturally-occurring elements, 25 are essential to humans. Four of these elements make up about 96% of the weight of the body. These four elements are Oxygen, Carbon, Hydrogen, Nitrogen. Much of the remaining 4% is accounted for by 7 elements. Calcium, important for building strong bones and teeth, is found abundantly in dairy products, sardines, and green, leafy vegetables. Phosphorus, a component of DNA, can be obtained by eating eggs, beans, and nuts. Potassium Sulfur Sodium Chlorine Magnesium Trace elements are required in only very small amounts and essential for life. An Iodine deficiency causes goiter. Fluorine is added to dental products and drinking water and helps to maintain healthy bones and teeth. Atoms (Radiation and life) A radioactive isotope is one in which the nucleus decays spontaneously. Radiation from decaying isotopes can damage cellular molecules and pose serious health risks. Natural sources of radiation can also pose a threat. Radon, a radioactive gas, is a carcinogen that can cause lung cancer. Radon testing is a standard procedure before a house is bought or sold. Radiativity as tracers: Cells use radioactive isotopes the same way they use nonradioactive isotopes of the same element.Once the cell takes up a radioactive isotope, the location and concentration of the isotope can be detected because of the radiation it emits. This makes radioactive isotopes useful as tracers for monitoring living organisms. A medical diagnostic tool called a PET scan works by detecting small amounts of radiation emitted by radioactive materials that were purposefully introduced into the body. Radioactivity as an Evolutionary Clock: The natural process of radioactive decay can be used to obtain important data about the evolutionary history of life on Earth. Fossils are reliable chronological records of life because we can determine their ages through radiometric dating, which is based on the decay of radioactive isotopes. A living organism assimilates the different isotopes of an element in proportions that reflect their relative abundances in the environment. A fossil’s age can be estimated by measuring the ratio of the two isotopes to learn how many half-life reductions have occurred since it died. Using such techniques, scientists can estimate the ages of fossils from around the world and place them in an ordered sequence called the fossil record. Carbon-14 is present in trace amounts in the environment and is a radioactive isotope with a half-life of 5,700 years. Chemical Bonding and MoleculesOnly electrons are directly involved in chemical reactions. Chemical ReactionsSubstrates:the reactants which are consumed during a catalytic or enzymatic reaction. Water and Life Life on Earth began in water and evolved there for 3 billion years before spreading onto land. Modern life is still tied to water. Your cells are composed of 70–95% water. The abundance of water is a major reason that Earth is habitable. Structure/Function: Water The polarity of water molecules and the hydrogen bonding that results explain most of water’s life-supporting properties. We will explore four of those properties: the cohesive nature of water the ability of water to moderate temperature the biological significance of ice floating the versatility of water as a solvent. The Cohesion of Water(?) Water molecules stick together as a result of hydrogen bonding. This tendency of molecules of the same kind to stick together is called cohesion and is much stronger for water than for most other liquids. Trees depend on cohesion to help transport water from their roots to their leaves. Surface tension is a measure of how difficult it is to stretch or break the surface of a liquid. How Water Moderates Temperature Earth’s giant water supply enables temperatures on the planet to stay within limits that permit life by storing a huge amount of heat from the sun during warm periods giving off heat that warms the air during cold periods. Evaporative cooling occurs when a substance evaporates and the surface of the liquid remaining behind cools down. The Biological Significance of Ice Floating When a deep body of water cools and a layer of ice forms on top, the floating ice acts as an insulating “blanket” over the liquid water, allowing life to persist under the frozen surface. If ice did not float, ponds, lakes, and even the oceans would freeze solid. Water as the Solvent of Life Water can dissolve an enormous variety of solutes necessary for life, providing a medium for chemical reactions. When water dissolves salt ions, each ion becomes surrounded by oppositely charged regions of water molecules. Acids, Bases, and PH Buffers are substances that minimize changes in pH. Buffers accept H+ when they are in excess and donate H+ when they are depleted. When $CO_2$ dissolves in seawater, it reacts with water to form an acid, whichl owers ocean $pH$ and can greatly change marine environments. The Molecules of LifeCarbon Chemistry Carbon is a versatile molecule. Because carbon can use one or more of its bonds to attach to other carbon atoms, it is possible to construct an endless diversity of carbon skeletons varying in size and branching pattern. One of the simplest organic compounds is methane, $CH_4$, with a single carbon atom bonded to four hydrogen atoms. Methane is abundant in natural gas and is produced by prokaryotes (原核生物) that live in swamps, and in the digestive tracts of grazing animals, such as cows. Giant Molecules On a molecular scale, many of life’s molecules are gigantic, earning the name macromolecules. Three categories of macromolecules are carbohydrates proteins nucleic acids Digestion breaks down macromolecules to make monomers available to your cells. Large Biological Molecules There are four categories of large biological molecules found in all living creatures: carbohydrates lipids proteins nucleic acids CarbohydratesCarbohydrates include sugars and polymers of sugar. In animals, carbohydrates are a primary source of dietary energy and raw material for manufacturing other kinds of organic compounds. In plants, carbohydrates serve as a building material for much of the plant body. MonosaccharidesSacchar = sugar Examples glucose (sports drinks) fructose (fruit) Monosaccharides, particularly glucose, are the main fuels for cellular work. In water, many monosaccharides form a ring structure. Disaccharides Examples lactose in milk, made from the monosaccharides glucose and galactose, Maltose in beer, malted milk shakes, and malted milk ball candy Sucrose in table sugar. Sucrose is the main carbohydrate in plant sap. High-fructose corn syrup (HFCS) is made by a commercial process that converts natural glucose in corn syrup to much sweeter fructose. HFCS is often one of the first ingredients listed in soft drinks. Common forms: sucrose and high-fructose corn syrup. Sugar is a major cause of tooth decay overconsumption increases the risk of developing type 2 diabetes and heart disease. Polysaccharides complex carbohydrates made of long chains of sugars-polymers of monosaccharides. Starch is a familiar example of a polysaccharide consists of long strings of glucose monomers is used by plant cells to store energy. Glycogen is used by animal cells to store energy is broken down to release glucose when you need energy. Cellulose is the most abundant organic compound on Earth forms cable-like fibrils in the walls that enclose plant cells cannot be broken by any enzyme produced by animals! Lipids Almost all carbohydrates are hydrophilic molecules that dissolve readily in water. Lipids are hydrophobic, unable to mix with water. Neither huge macromolecules nor polymer Fats A typical fat, or triglyceride, consists of a glycerol molecule joined with three fatty acid molecules via a dehydration reaction. Fats perform essential functions in the human body including energy storage, cushioning, and Insulation. saturated fat If the carbon skeleton of a fatty acid has fewer than the maximum number of hydrogens at the double bond, it is unsaturated, otherwise it is saturated. A saturated fat has all three of its fatty acids saturated. different kinds of fat Most animal fats have a relatively high proportion of saturated fatty acids, can easily stack, tending to be solid at room temperature contribute to atherosclerosis, in which lipid-containing plaques build up along the inside walls of blood vessels. Most plant and fish fats tend to be high proportion of unsaturated fatty acids and liquid at room temperature. Hydrogenation adds hydrogen converts unsaturated fats to saturated fats makes liquid fats solid at room temperature creates trans fats, a type of unsaturated fat that is particularly bad for your health. Steroids(?) Steroids are very different from fats in structure and function. The carbon skeleton has four fused rings. Steroids vary in the functional groups attached to this set of rings, and these chemical variations affect their function. Cholesteroal is a key component of cell membranes is the “base steroid” from which your body produces other steroids, such as estrogen and testosterone. Synthetic anabolic steroids are variants of testosterone and mimic some of its effects may be prescribed to treat diseases such as cancer and AIDS are abused by athletes to build up their muscles quickly can cause serious physical and mental problems. Proteins are polymers of amino acid monomers account for more than 50% of the dry weight of most cells are instrumental in almost everything cells do. Major Types of Proteins Structural Proteins (provide support) Storage Proteins (provide amino acids for growth) Contractile Proteins (help movement) Transport Proteins (help transport substances) Enzymes (help chemical reactions) Amino Acids All proteins are made by stringing together a common set of 20 kinds of amino acids. Every amino acid consists of a central carbon atom bonded to four covalent partners. Three of those attachment groups are common to all amino acids: a carboxyl group $(-COOH)$ an amino group $(-NH2)$ a hydrogen atom The variable component of amino acids is called the side chain is attached to the fourth bond of the central carbon. Example Leucine - Hydrophobic side chain Serine - Hydrophilic side chain Protein Shape Cells link amino acids together by dehydration reactions forming peptide bonds creating long chains of amino acids called polypeptides A functional protein is one or more polypeptide chains precisely twisted, folded, and coiled into a molecule of unique shape. Four level of protein structure: Primary Structure (is simply the order of amino acids in the peptide chain) Secondary Structure (2-dimensional structures formed due to hydrogen boding between hydrogen of amine group and oxygen of the carbonyl groups) Tertiary Structure (involves the three-dimensional folding of a protein due to interactions of amino acid side chains) Quaternary Structure (involves the association of two or more polypeptides into functional proteins) A slight change in the amino acid sequence can affect a protein’s ability to function. The substitution of one amino acid for another at a particular position in hemoglobin, causes sickle-cell disease. One difference in structure is enough to cause the protein to fold into a different shape, which alters its function, which in turn causes disease. Prions, misfolded versions of normal brain proteins, can cause a lot of disease. A protein’s shape is sensitive to the environment. An unfavorable change in temperature, pH, or some other factor can cause a protein to unravel. Nucleic Acids Nucleic acids are macromolecules that made from monomers called nucleotides Each nucleotide has three parts a five-carbon sugar a phosphate group a nitrogen-containing base. store information provide the instructions for building proteins. consist of two types DNA (deoxyribonucleic acid) RNA (ribonucleic acid). DNA The DNA resides in the cell as one or more very long fibers called chromosomes. A gene is a unit of inheritance encoded in a specific stretch of DNA that programs the amino acid sequence of a polypeptide. Dehydration reactions link nucleotide monomers into long chains called polynucleotides form covalent bonds between the sugar of one nucleotide and the phosphate of the next form a sugar-phosphate backbone. Each DNA nucleotide has one of four possible nitrogenous bases: adenine (A) guanine (G) thymine (T) cytosine (C) A molecule of cellular DNA is double-stranded, with two polynucleotide strands coiled around each other to form a double helix. The functional groups hanging off the base determine which bases pair up A only pairs with T G only pairs with C DNA vs. RNA There are many similarities between DNA and RNA Both are polymers of nucleotides Both are made of nucleotides consisting of a sugar a phosphate a base. There are three important differences between DNA and RNA. As its name ribonucleic acid denotes, the RNA sugar is ribose rather than deoxyribose in DNA. Instead of the base thymine, RNA has a similar but distinct base called uracil. RNA is usually found in single-stranded form, whereas DNA usually exists as a double helix. A Tour of the CellThe Microscopic World of CellsCell theory states that all living things are composed of cells and that all cells come from earlier cells. Two Major Categories of Cells Prokaryotic cells include Bacteria Archaea. Eukaryotic cells include protists plants fungi animals Basic Features All cells have several basic features. They are all bounded by a thin plasma membrane. Inside all cells is a thick, jelly-like fluid called the cytosol, in which cellular components are suspended. All cells have one or more chromosomes carrying genes made of DNA. All cells have ribosomes, tiny structures that build proteins according to the instructions from the genes. Prokaryotic Cells Prokaryotic cells are older than eukaryotic cells. Prokaryotes appeared about 3.5 billion years ago. Eukaryotes appeared about 2.1 billion years ago. Prokaryotic cells are usually smaller than eukaryotic cells simpler in structure. A prokaryotic cell lacks a nucleus. Its DNA is coiled into a nucleus-like region called the nucleoid. Surrounding the plasma membrane of most prokaryotic cells is a rigid cell wall, which protects the cell helps maintain its shape Prokaryotes can have short projections called pili, which can also attach to surfaces, and/or flagella, long projections that propel them through their liquid environment. Eukaryotic Cells Eukaryotic cells Only eukaryotic cells have organelles, membrane-enclosed structures that perform specific functions. The most important organelle is the nucleus, which houses most of a eukaryotic cell’s DNA and is surrounded by a double membrane. An Overview of Eukaryotic Cells Eukaryotic cells are fundamentally similar. The region between the nucleus and plasma membrane is the cytoplasm. The cytoplasm of a eukaryotic cell consists of various organelles suspended in the liquid cytosol. Organelles Most organelles are found in both animal and plant cells. But there are some important differences. Only plant cells have chloroplasts where photosynthesisoccurs Only animal cells have lysosomes bubbles of digestive enzymes surrounded by membranes An Idealize Animal Cell An Idealize Plant Cell Plasma Membrane The plasma membrane and other membranes of the cell are composed mostly of phospholipids, which group together to form a two-layer sheet called a phospholipid bilayer. Each phospholipid is composed of two distinct regions: a “head” with a negatively charged phosphate group two nonpolar fatty acid “tails.” Suspended in the phospholipid bilayer of most membranes are proteins that help regulate traffic across the membrane perform other functions. The plasma membrane is a fluid mosaic: fluid because molecules can move freely past one another a mosaic because of the diversity of proteins in the membrane Cell Surfaces Plant cells have a cell wall made from cellulose fibers Plant cell walls protect the cells maintain cell shape keep cells from absorbing too much water Animal cells lack cell walls. Fibers made of the protein collagen hold cells together in tissues can have protective and supportive functions In addition, the surfaces of most animal cells contain cell junctions, structures that connect cells together into tissues, allowing the cells to function in a coordinated way. Nucleus The nucleus is the control center of the cell Each gene is a stretch of DNA that stores the information necessary to produce a particular protein. The nucleus is separated from the cytoplasm by a double membrane called the nuclear envelope. Pores in the envelope allow certain materials to pass between the nucleus and the surrounding cytoplasm. Within the nucleus, long DNA molecules and associated proteins form fibers called chromatin. Each long chromatin fiber constitutes one chromosome. The nucleolus is a prominent structure within the nucleus the site where the components of ribosomes are made Ribosomes Ribosomes are responsible for protein synthesis. In eukaryotic cells, the components of ribosomes are made in the nucleus and then transported through the pores of the nuclear envelope into the cytoplasm, where ribosomes begin their work. Although structurally identical, some ribosomes are suspended in the cytosol, making proteins that remain within the fluid of the cell. Others are attached to the outside of the nucleus or an organelle called the endoplasmic reticulum, making proteins that are incorporated into membranes or secreted by the cell. How DNA Directs Protein Production? DNA transfers its coded information to a molecule called messenger RNA (mRNA). mRNA exits the nucleus through pores in the nuclear envelope travels to the cytoplasm, where it binds to a ribosome A ribosome moves along the mRNA, translating the genetic message into a protein with a specific amino acid sequence. Endomembrane System The endomembrane system in a cell consists of the nuclear envelope the endoplasmic reticulum the Golgi apparatus lysosomes vacuoles These membranous organelles are physically connected linked by vesicles, sacs made of membrane. The Endoplasmic Reticulum The endoplasmic reticulum (ER) is one of the main manufacturing facilities in a cell. The ER produces an enormous variety of molecules is connected to the nuclear envelope is composed of interconnected rough and smooth ER that have different structures and functions. Rough ER The “rough” in rough ER refers to ribosomes that stud the outside of its membrane. The ER makes more membrane. Ribosomes attached to the rough ER produce proteins that will be inserted into the growing ER membrane transported to other organelles eventually exported. Some products manufactured by rough ER are chemically modified and then packaged into transport vesicles, sacs made of membrane that bud off from the rough ER. Smooth ER lacks surface ribosomes produces lipids, including steroids helps liver cells detoxify circulating drugs Golgi Apparatus works in partnership with the ER receives, refines, stores, and distributes chemical products of the cell. The Golgi apparatus consists of a stack of membrane plates. Products made in the ER reach the Golgi apparatus in transport vesicles Proteins within a vesicle are usually modified by enzymes during their transit from the receiving to he shipping side of the Golgi apparatus. The shipping side of a Golgi stack is a depot from which finished products can be carried in transport vesicles to other organelles or to the plasma membrane. Lysosomes A lysosome is a membrane-enclosed sac of digestive enzymes found in animal cells Most plant cells do not contain lysosomes Enzymes in a lysosome can break down large molecules such as proteins Polysaccharides fats nucleic acids Lysosomes have several types of digestive functions Many single-celled protists engulf nutrients in tiny cytoplasmic sacs called food vacuoles Lysosomes fuse with the food vacuoles, exposing the food to digestive enzymes Small molecules that result from this digestion, such as amino acids, leave the lysosome and nourish the cell Lysosomes can also destroy harmful bacteria engulf and digest parts of another organelle sculpt tissues during embryonic development, helping to form structures such as fingers. Vacuoles Vacuoles are large sacs made of membrane that bud off from the ER or Golgi apparatus Vacuoles have a variety of functions food vacuoles bud from the plasma membrane certain freshwater protists have contractile vacuoles that pump out excess water that flows into the cell from the outside environment A central vacuole can account for more than half the volume of a mature plant cell The central vacuole of a plant cell is a versatile compartment that may store organic nutrients absorb water contain pigments that attract pollinating insects or poisons that protect against plant-eating animals. Energy Transformations Mitochondria and chloroplasts contain their own DNA that encodes some of their own proteins made by their own ribosomes. Each chloroplast and mitochondrion contains a single circular DNA chromosome that resembles a prokaryotic chromosome can grow and pinch in two, reproducing themselves. This is evidence that mitochondria and chloroplasts evolved from ancient free-living prokaryotes that established residence within other, larger host prokaryotes. Chloroplasts Chloroplasts are unique to the photosynthetic cells of plants and algae the organelles that perform photosynthesis. Chloroplasts are divided into compartments by two membranes, one inside the other. The stroma is a thick fluid found inside the innermost membrane. Suspended in that fluid is a network of membrane-enclosed disks and tubes, which form another compartment. The disks occur in interconnected stacks called grana that resemble stacks of poker chips. The grana are a chloroplast’s solar power packs, the structures that trap light energy and convert it to chemical energy. Mitochondria Mitochondria are found in almost all eukaryotic cells are the organelles in which cellular respiration takes place produce ATP from the energy of food molecules An envelope of two membranes encloses the mitochondrion, and the inner membrane encloses a thick fluid called the mitochondrial matrix. The inner membrane of the envelope has numerous infoldings called cristae. The folded surface of the membrane includes many of the enzymes and other molecules that function in cellular respiration creates a greater area for the chemical reactions of cellular respiration. Cytoskeleton(?) The cytoskeleton is a network of fibers extending throughout the cytoplasm serves as both skeleton and “muscles” for the cell, functioning in support and movement. The cytoskeleton contains several types of fibers made from different proteins. Microtubulesare hollow tubes of protein. The other kinds of cytoskeletal fibers, called intermediate filamentsand microfilaments, are thinner and solid. The cytoskeleton provides anchorage and reinforcement for many organelles in a cell. A cell’s cytoskeleton is dynamic. It can be quickly dismantled in one part of the cell by removing protein subunits and re-formed in a new location by reattaching the subunits. Such rearrangement can provide rigidity in a new location change the shape of the cell cause the whole cell or some of its parts to move. Cilia and Flagella In some eukaryotic cells, microtubules are arranged into structures called flagella and cilia, extensions from a cell that aid in movement. Eukaryotic flagella propel cells through an undulating, whiplike motion. They often occur singly, but may also appear in groups on the outer surface of protists. The Working CellSome Basic Energy ConceptsConservation of Energy Kinetic energy is the energy of motion. Potential energy is stored energy, energy that an object has because of its location structure Life depends on countless similar conversions of energy from one form to another. Energy can only be converted from one form to another. EntropySecond Law of Thermodynamics states that the degree of disorder (entropy) is always increasing in the universe. Heat Heat is a type of kinetic energy contained in the random motion of atoms and molecules (energy in its most disordered, chaotic form). All energy conversions generate some heat. Chemical Energy The molecules of food, gasoline, and other fuels have a form of potential energy called chemical energy, which arises from the arrangement of atoms and can be released by a chemical reaction. Cellular respiration is the energy-releasing chemical breakdown of fuel molecules the storage of that energy in a form the cell can use to perform work. Humans convert about 34% (1/3) of our food energy to useful work. The rest of the energy released by the breakdown of fuel molecules generates body heat. Food Calories A calorie (cal) is the amount of energy that can raise the temperature of 1 gram (g) of water by 1°C. Food Calories are kilocalories (Cal), equal to 1,000 calories. ATP and Cellular Work Chemical energy released by the breakdown of organic molecules during cellular respiration is used to generate molecules of ATP (Adenosine Triphosphate). ATP acts like an energy shuttle. Store energy and release it later as needed Structure of ATP ATP (adenosine triphosphate) consists of an organic molecule called adenosine plus a tail of three phosphate groups is broken down to ADP, adenosine diphosphate, and a phosphate group, releasing energy. The release of the phosphate at the tip of the triphosphate tail makes energy available to cells. Phosphate Transfer ATP energizes other molecules in cells by transferring phosphate groups to those molecules. This energy helps cells change shape enables the transport of ions and other dissolved substances across the membranes drives the production of a cell’s large molecules. The ATP Cycle Cells spend ATP continuously. Cellular work spends ATP, which is recycled when ADP and phosphate are combined, using energy released by cellular respiration. Up to 10 million ATPs are consumed and recycled each second in a working muscle cell. Enzymes Metabolism is the total of all chemical reactions in an organism. Most metabolic reactions require the assistance of enzymes, proteins that speed up chemical reactions without being consumed by the reaction. All living cells contain thousands of different enzymes, each promoting a different chemical reaction. Activation EnergyActivation energy is the energy that must be invested to start a reaction Enzyme Activity An enzyme is very selective in the reaction it catalyzes. Each enzyme recognizes a substrate, a certain reactant molecule. The active site has a shape and chemistry that fits the substrate molecule. This interaction is called induced fit because the entry of the substrate induces the enzyme to change shape slightly, making the fit between the substrate and active site snugger. After the products are released from the active site, the enzyme can accept another molecule of its substrate. The ability to function repeatedly is a key characteristic of enzymes. Many enzymes are named for their substrates, but with an –ase ending. Enzyme Inhibitors Certain molecules inhibit a metabolic reaction by binding to an enzyme disrupting its function. Some of these enzyme inhibitors are actually substrate imposters that plug up the active site. Other inhibitors bind to the enzyme at a site remote from the active site, but the binding changes the enzyme’s shape so that the active site no longer accepts the substrate. In each case, an inhibitor disrupts the function of an enzyme by altering its shape. In some cases, the binding of an inhibitor is reversible. If a cell is producing more of a certain product than it needs, that product may reversibly inhibit an enzyme required for its production, keeping the cell from wasting resources that could be put to better use. (Feedback inhibition) Many beneficial drugs work by inhibiting enzymes. Penicillin blocks the active site of an enzyme that bacteria use in making cell walls. Ibuprofen inhibits an enzyme involved in sending pain signals. Many cancer drugs inhibit enzymes that promote cell division. Many toxins and poisonsalso work as inhibitors. Membrane FunctionOf all the major functions of these membrane proteins, one of the most important is the regulation of transport in and out of the cell. Passive Transport Passive transport is the diffusion of a substance across a membrane without the input of energy. Molecules constantly vibrate and wander randomly. Diffusion is the movement of molecules spreading out evenly into the available space. In passive transport, a substance diffuses down its concentration gradient from where the substance is more concentrated to where it is less concentrated. Active TransportCellular Respiration: Obtaining Energy from FoodPhotosynthesis: Using Light to Make FoodGeneticsCellular Reproduction: Cells from CellsAnimal Structure and FunctionWordsIntroduction English Chinese species 种系 Taxonomy 分类学 Bacteria 细菌 Archaea 古细菌 Eukarya 真核生物界 prokaryotic cells 原核细胞 eukaryotic cells 真核细胞 Kingdom Plantae 植物界 Kingdom Fungi 真菌界 Kingdom Animalia 动物界 photosynthesis 光合作用 decomposer 分解者 consumer 消费者 producer 生产者 ingest 摄取 protists 原生生物 Amoebas 变形虫 Antibiotic resistance 抗生素抗性 susceptibility 敏感性 Artificial selection 人工选择 domesticated 家养的 offspring 后代 ecosystems 生态系统 photosynthetic organisms 光合生物 metabolism 新陈代谢 CellEssential Chemistry of Biology English Chinese goiter 甲状腺肿 chronological records 序时记录 substrates 底物 catalytic reaction 催化反应 enzymatic reaction 酶促反应 The Molecules of Life English Chinese lactose 乳糖 small intestine 小肠 prokaryotes 原核生物 digestive tracts 消化系统 grazing animals 食草动物 carbohydrates(no n follow o) 糖类 proteins 蛋白质 nucleic acids 核酸 hydrolysis 水解作用 dehydration reaction 脱水反应 lipid 脂质 monosaccharides 单糖 glucose 葡萄糖 fructose 果糖 Disaccharides 双糖 maltose 麦芽糖 sucrose 蔗糖 galactose 半乳糖 High-fructose corn syrup (HFCS) 高果葡糖浆 Polysaccharides 多糖 Starch 淀粉 Glycogen 糖原 Cellulose 纤维素 fibrils 原纤维 hydrophilic 亲水的 hydrophobic 憎水的/疏水的 triglyceride 甘油三酯 glycerol 甘油 fatty acid 脂肪酸 unsaturated 不饱和的 saturated 饱和的 atherosclerosis 动脉硬化 plaques 斑块 vessels 血管 trans fats 反式脂肪 Hydrogenation 加氢作用 Cholesteroal 胆固醇 estrogen 雌激素 testosterone 睾丸激素 Synthetic anabolic steroids 合成类固醇 amino acid 氨基酸 Leucine 亮氨酸 Serine 丝氨酸 peptide bonds 肽键 polypeptides 多肽 hemoglobin 血红蛋白 sickle-cell disease 镰刀型细胞贫血 prions 朊病毒 chromosomes 染色体 nucleotides 核苷酸 adenine 腺嘌呤 guanine 鸟嘌呤 thymine 胸腺嘧啶 cytosine 胞嘧啶 uracil 尿嘧啶 ribose 核糖 deoxyribose 脱氧核糖 A Tour of the Cell English Chinese penicillin 青霉素 ribosome 核糖体 plasma membrane 细胞质膜 cytosol 细胞液/细胞质基质 chromosomes 染色体 ribosomes 核糖体 organelles 细胞器 nucleus 细胞核 nucleoid 拟核 Pili 鞭毛 Flagella 菌毛 cell wall 细胞壁 cytoplasm 细胞质 chloroplasts 叶绿体 lysosomes 溶酶体 phospholipids 磷脂 fluid mosaic 流动镶嵌 cellulose fibers 纤维素纤维 protein collagen 胶原蛋白 nuclear envelope 核膜 pores 核孔 chromatin 染色质 nucleolus 核仁 endomembrane system 内膜系统 vesicles 囊泡 Endoplasmic Reticulum 内质网 Golgi Apparatus 高尔基体 sac 囊 food vacuoles 食物泡 vacuoles 液泡 contractile vacuoles 伸缩泡 pigments 色素 pollinating insects 传粉昆虫 Mitochondria 线粒体 cytoskeleton 细胞骨架 algae 藻类 stroma 叶绿体基质 grana 基粒 respiration 呼吸作用 mitochondrial matrix 线粒体基质 cristae 脊 Microtubules 微管 intermediate filaments 中间纤维 microfilaments 微丝 The Working Cell English Chinese glycolysis 糖酵解 Cellular respiration 细胞呼吸作用 calorie 卡路里 Adenosine Triphosphate(ATP) 三磷酸腺苷 adenosine 腺苷 phosphate groups 磷酸基团 adenosine diphosphate 二磷酸腺苷 lactase 乳糖分解酶 substrate 底物 induced fit 诱导配合 Enzyme Inhibitors 酶抑制剂 toxins 毒药 diffusion 扩散 concentration gradient 浓度梯度 Cellular Respiration: Obtaining Energy from Food English Chinese Photosynthesis: Using Light to Make Food English Chinese GeneticsCellular Reproduction: Cells from Cells English Chinese]]></content>
      <categories>
        <category>note</category>
        <category>General Biology</category>
      </categories>
      <tags>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Computer Architecture]]></title>
    <url>%2F2019%2F12%2F19%2Fnote%2FComputer%20Architecture%2FComputer-Architecture%2F</url>
    <content type="text"><![CDATA[NetworkIntroductionComputers Desktop computers Servers Supercomputers Embedded computers (microprocessors) Personal Mobile Devices Battery-operated devices with wireless connectivity. Warehouse-Scale Computers Datacenter containing hundreds of thousands of servers providing software as a service (SaaS). Integrated Circuit Cost Nonlinear relation to defect rate and die area Wafer cost and wafer area are fixed Defect rate is determined by manufacturing process Die area is determined by architecture and circuit design Impacts of Advancing Technology Processor Logic capacity: increases about 30% per year Performance: 2× every 1.5 years Memory DRAM capacity: 4× every 3 years, about 60% per year Memory speed: 1.5× every 10 years Cost per bit: decreases about 25% per year Storage Capacity: increases about 60% per year Computer Organization Components Processor (control, datapath) Input (keyboard, mouse) Output (display, printer) Memory (cache, SRAM, disk drive, CD/DVD) Network Our main focus The processor (control and datapath) and its interaction with memory systems Implemented using hundreds of millions of transistors; impossible to understand by looking at each transistor Machine Organization Capabilities and performance characteristics of the principal functional units (e.g., registers, ALU, shifters, logic units). Ways in which these components are interconnected Logic and s by which such information flow is controlled Instruction Set Architecture (ISA) Register Transfer Level (RTL) description Processor Organization Control needs to have circuitry to Decide which is the next instruction and input from memory Decode the instruction Issue signals that control the way information flows between datapath components Control what operations the datapath’s functional units perform Datapath needs to have circuitry to Execute instructions – functional units (e.g., adder) and storage locations (e.g., register) Interconnect the functional units so that the instructions can be executed as required Load data from and store data to memory System Software Operating System Supervising program that interfaces the user’s program with the hardware (e.g., Linux, iOS, Windows) Handles basic input and output operations Allocates storage and memory Provides for protected sharing among multiple applications Compiler Translate high-level language programs (e.g., C, Java) into instructions that the hardware can execute Instruction Set Architecture (ISA) ISA, or simply architecture – the abstract interface between the hardware and the lowest level software that includes all the information necessary to write a machine language program, including instructions, registers, memory access, I/O, etc. Enables implementations of varying cost and performance to run identical software. The combination of the basic instruction set (the ISA) and the operating system interface is called the Application Binary Interface (ABI). The user portion of the instruction set plus the operating system interfaces used by application programmers. Define a standard for binary portability across computers. MIPS ISA Instruction Categories Load/Store Computational Jump and Branch Floating Point Memory Management Special Digital Logic ReviewNumber SystemsRadix or base of the number system is the total number of digits allowed in the number system Digital Circuits Digital circuits generally contain two parts Combinational logic Sequential logic Combinational circuits consist of logic gates with inputs and outputs The outputs at any instance of time depend only on the combination of the input values based on logic operations such as AND, OR, etc. Sequential circuits, in addition to inputs and outputs also have storage elements, therefore the output depends on both the current inputs as well as the stored values Digital Signal Representation Active High High voltage activates/enables the pin Active Low Low voltage activates/enables the pin Combinational CircuitsSequencial CircuitsInstruction Set ArchitectureArithmetic and Logic Unit (ALU)DatapathPipeliningMemory and CacheVirtual MemoryInput/Output (I/O) SystemsInstruction-Level ParallelismMulti-Threading and Multi-Core]]></content>
      <categories>
        <category>note</category>
        <category>Computer Architecture</category>
      </categories>
      <tags>
        <tag>Computer Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Multiline Formula in LaTex]]></title>
    <url>%2F2019%2F09%2F08%2Fnote%2Ftex%2Fmultiline-in-tex%2F</url>
    <content type="text"><![CDATA[When writing multiline formula with Mathjax in Hexo:$$\begin{equation}\begin{split} a&amp;=b+c-d\&amp;\quad +e-f\&amp;=g+h\&amp; =i\end{split}\end{equation}$$ 12345\begin&#123;equation&#125;\begin&#123;split&#125; a&amp;=b+c-d\\&amp;\quad +e-f\\&amp;=g+h\\&amp; =i\end&#123;split&#125;\end&#123;equation&#125; \begin and \end represent the begin and end of the formula \\ as the break line symbol &amp; for align Notice: In Hexo, \\ is an escape for \, in order to write double backslash, in Hexo you should write \\\\ 12345\begin&#123;equation&#125;\begin&#123;split&#125; a&amp;=b+c-d\\\\&amp;\quad +e-f\\\\&amp;=g+h\\\\&amp; =i\end&#123;split&#125;\end&#123;equation&#125; $$\begin{equation}\begin{split} a&amp;=b+c-d\\&amp;\quad +e-f\\&amp;=g+h\\&amp; =i\end{split}\end{equation}$$]]></content>
      <categories>
        <category>note</category>
        <category>tex</category>
      </categories>
      <tags>
        <tag>tex</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Cvxpy Install on Win10]]></title>
    <url>%2F2019%2F09%2F07%2Fnote%2Fpython%2Fcvxpy%2Fcvxpy-install%2F</url>
    <content type="text"><![CDATA[Upgrade pip first: python -m pip install --upgrade pip. Try pip install cvxpy, if success, everything is done.If an error occur: Donwload wheel files from https://www.lfd.uci.edu/~gohlke/pythonlibs/, and use pip install filename.whl to install them.Remember to download the correct version of the wheel file:“cpxx” is the version of python and what’s followed is the operation system’s version.]]></content>
      <categories>
        <category>note</category>
        <category>python</category>
        <category>cvxpy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>cvxpy</tag>
        <tag>optimization</tag>
        <tag>convex optimation</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tips for Writing LaTex Code]]></title>
    <url>%2F2019%2F09%2F03%2Fnote%2Ftex%2Ftex%2F</url>
    <content type="text"><![CDATA[CommandsLogical Operators Name Symbol Code negation $\neg$ \lnot or \neg overline $\overline{overline}$ \overline{overline} and $\land$ \wedge or \land or $\vee$ \lor or \vee exclusive-or $\oplus$ \oplus equivalence $\equiv$ \equiv tautology $\top{}$ \top contradiction $\bot$ \bot universal quantification $\forall$ \forall existential quantification $\exists$ \exists Because $\because$ \because Therefore $\therefore$ \therefore Greek Letters Symbol Code A / $\alpha$ A / \alpha B / $\beta$ B / \beta $\Gamma$ / $\gamma$ \Gamma / \gamma $\Delta$ / $\delta$ \Delta / \delta E / $\epsilon$ / $\varepsilon$ E / \epsilon / \varepsilon Z / $\zeta$ Z / \zeta H / $\eta$ H / \eta $\Theta$ / $\theta$ / $\vartheta$ \Theta / \theta / \vartheta I / $\iota$ I / \iota K / $\kappa$ / $\varkappa$ K / \kappa / \varkappa $\Lambda$ / $\lambda$ \Lambda / \lambda M / $\mu$ M / \mu N / $\nu$ N / \nu $\Xi$ / $\xi$ \Xi / \xi O / $\omicron$ O / \omicron $\Pi$ / $\pi$ / $\varpi$ \Pi / \pi / \varpi $P$ / $\rho$ / $\varrho$ P / \rho / \varrho $\Sigma$ / $\sigma$ / $\varsigma$ \Sigma / \sigma / \varsigma $T$ / $\tau$ \T / \tau $\Upsilon$ / $\upsilon$ \Upsilon / \upsilon $\Phi$ / $\phi$ / $\varphi$ \Phi / \phi / \varphi $X$ / $\chi$ X / \chi $\Psi$ / $\psi$ \Psi / \psi $\Omega$ / $\omega$ \Omega / \omega Relation Operators Name Symbol Code Not less than $\nless$ \nless Not greater than $\ngtr$ \ngtr Less than or equal to $\leq$ / $\leqslant$ \leq / \leqslant Greater than or equal to $\geq$ / $\geqslant$ \geq / \geqslant Neither less than nor equal to $\nleq$ / $\nleqslant$ \nleq / \nleqslant Neither greater than nor equal to $\ngeq$ / $\ngeqslant$ \ngeq / \ngeqslant Is member of $\in$ \in Has member $\ni$ \ni Is not member of $\not\in$ \not\in Hasn’t member $\not\ni$ \not\ni Is a proper subset of $\subset$ \subset Is a proper superset of $\supset$ \supset Is not a proper subset of $\not\subset$ \subset Is not a proper superset of $\not\supset$ \supset Is a subset of $\subseteq$ \subseteq Is a superset of $\supseteq$ \supseteq Is not a subset of $\not\subseteq$ \subseteq Is not a superset of $\not\supseteq$ \supseteq Approximately $\approx$ \approx Not equal to $\neq$ \neg / \ne Others Name Symbol Code overset $\overset{over}{N}$ \overset{over}{N} underset $\underset{under}{N}$ \underset{under}{N} binom $\binom{a}{b}$ \binom{a}{b} ceil $\lceil x \rceil$ \lceil x \rceil floor $\lfloor x \rfloor$ \lfloor x \rfloor EscapesIn hexo Command Represents \_ _ \\\\ \\(It is the break line symbol of) &amp; &amp;(hexo will take care of the “&amp;” escape for you)]]></content>
      <categories>
        <category>note</category>
        <category>tex</category>
      </categories>
      <tags>
        <tag>tex</tag>
        <tag>latex</tag>
        <tag>tips</tag>
        <tag>note</tag>
        <tag>usage</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond Python, Flask, OOP and AI]]></title>
    <url>%2F2019%2F08%2F19%2Fnote%2FCS50%20Beyond%2Fpython%2F</url>
    <content type="text"><![CDATA[Flask SessionWe will use a flask extension called “flask_session”1234567891011121314from flask import Flask, render_template, sessionfrom flask_session import Sessionfrom tempfile import mkdtempapp = Flask(__name__)app.config[&quot;SESSION_FILE_DIR&quot;] = mkdtemp()app.config[&quot;SESSION_PERMANENT&quot;] = Falseapp.config[&quot;SESSION_TYPE&quot;] = &quot;filesystem&quot;Session(app)@app.route(&apos;/&apos;)def index(): return session “session” is a dict that differ for every session. Store your temporary app data in it.]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>oop</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond SQL, ORMs, APIs]]></title>
    <url>%2F2019%2F08%2F19%2Fnote%2FCS50%20Beyond%2Fsql%2F</url>
    <content type="text"><![CDATA[In this course we use PostgreSQL.Data Types Data Type Usage INTEGER Storing integer DECIMAL Storing floating point number SERIAL A SERIAL will increment every time(like AUTOINCREMENT in sqLite) VARCHAR For a number of characters TIMESTAMP Store time BOOLEAN Ture or False ENUM Fix finite number of values Constraints Constraints Meaning NOT NULL Column cannot be empty UNIQUE All the data in that column should be unique PRIMARY KEY Primary key of the table. A table can have at most one primary key DEFAULT specify the default value of a column CHECK Used to enforce some constraints in the database Example for CHECK: CHECK A &gt; 0, means that you can’t add negative INTEGER to the column A Functions SUM COUNT MIN MAX AVG Example: SELECT SUM(*) FROM xxx/SELECT COUNT(*) FROM xxxThe database will return a column which column name is the function name. SQLAlchemyExample code for using SQLAlchemy 12345from sqlalchemy import create_enginefrom sqlalchemy.orm import scoped_session, sessionmakerengine = create_engine(&quot;database address&quot;)db = scoped_session(sessionmaker(bind=engine)) After that, use db.execute to retrieve data. SQLAlchemy can insert the arguments safely.You should use the following way to weite the code. 1db.execute(&quot;INSERT INTO xxx VALUES (:a, :b, :c)&quot;, &#123;&quot;a&quot;: a, &quot;b&quot;: b, &quot;c&quot;: c&#125;) ORMsORM stands for Object Relational Mapping. ORMs let you treat rows and tables inside of a database the same way you would treat an object and classes in an object oriented programming language. With ORM, you can use a class to reference a table. “flask_sqlalchemy” is a library that enables you to use sqlalchemy in flask application. 12345678910from flask_sqlalchemy import SQLAlchemydb = SQLAlchemy()class Flight(db.Model): __tablename__ = &quot;flight&quot; (your table name) id = db.Column(db.Integer, primary_key=True) (each represents a column) origin = db.Column(db.String, nullable=False) destination = db.Column(db.String, nullable=False) duration = db.Column(db.Integer, nullable=False) The route file: 1234567891011121314151617app = Flask(__name__)app.config[&quot;SQLALCHEMY_DATABASE_URI&quot;] = &quot;your database url&quot;app.config[&quot;SQLALCHEMY_TRACK_MODIFICATIONS&quot;] = Falsedb.init_app(app)def main(): f = open(&quot;flights.csv&quot;) reader = csv.reader(f) for origin, destination, duration in reader: flight = Flight(origin=origin, destination=destination, duration=duration) db.session.add(flight) print(f&quot;Added flight from &#123;origin&#125; to &#123;destination&#125; lasting &#123;duration&#125; minutes.&quot;) db.session.commit()if __name__ == &quot;__main__&quot;: with app.app_context(): main() Commands in SQLAlchemy: commands usage db.create_all() create table flight=Flight(origin=&#39;xxx&#39;, destination=&#39;xxx)db.session.add(flight) insert data Flight.query.all() SELECT * FROM flights Flight.query.filter_by(origin=&quot;Paris&quot;).all() SELECT * FROM flights WHERE origin = &#39;Paris&#39; Flight.query.filter_by(origin=&quot;Paris&quot;).count() SELECT COUNT(*) FROM flights WHERE origin = &#39;Paris&#39; Flight.query.filter_by(id=28).first()Flight.query.get(28) SELECT * FROM flights WHERE id = 28 flight = Flight.query.get(6)flight.duration = 280 UPDATE flights SET duration = 280 WHERE id = 6 flight = Flight.query.get(28)db.session.delete(flight) DELETE FROM flights WHERE id = 28 db.session.commit() COMMIT Flight.query.order_by(Flight.origin).all() SELECT * FROM flights ORDER BY origin Flight.query.order_by(Flight.origin.desc()).all() SELECT * FROM flights ORDER BY origin DESC Flight.query.filter(Flight.origin != &quot;Paris&quot;).all() SELECT * FROM flights WHERE origin != &#39;Paris&#39; Flight.query.filter(Flight.origin.like(&quot;%a%&quot;)).all() SELECT * FROM flights WHERE origin LIKE &#39;%a%&#39; Flight.query.filter(Flight.origin.in_([&quot;Tokyo&quot;, &quot;Paris&quot;])).all() SELECT * FROM flights WHERE origin IN (&#39;Tokyo&#39;, &#39;Paris&#39;) Flight.query.filter(and_(Flight.origin == &quot;Paris&quot;, Flight.duration &gt; 500)).all() SELECT * FROM flights WHERE origin = &#39;Paris&#39; AND duration &gt; 500 Flight.query.filter(or_(Flight.origin == &quot;Paris&quot;, Flight.duration &gt; 500)).all() SELECT * FROM flights WHERE origin = &#39;Paris&#39; OR duration &gt; 500 db.session.query(Flight, Passenger).filter(Flight.id == Passenger.flight_id).all() SELECT * FROM flights JOIN passengers ON flights.id = passengers.fought_id APIsHTTP Methods GET: retrieve resource POST: create a new resource PUT: replace a resource PATCH: update a resource DELETE: delete a resource Status Codes 200 OK 201 Created 400 Bad Request 403 Forbidden 404 Not Found 405 Method Not Allowed 422 Unprocessable Entity]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>sql</tag>
        <tag>orms</tag>
        <tag>apis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond Security and Scalability]]></title>
    <url>%2F2019%2F08%2F17%2Fnote%2FCS50%20Beyond%2Fsecurity%2F</url>
    <content type="text"><![CDATA[SecurityGitOpen souce has a trade-off, on one hand, everyone can see the source code so that everyone can help fix the bugs, on the other hand, everyone can look for potential vulnerabilities and then take advantage of it. Also, your git commit history is going to store the entire history, so if you make a commit that accidentally include your credentials. If you delete them in the later commit, the credentials are still there. That’s the potential risk. Be careful about that. FlaskSo when you are building your web application, you can save your key in the Environment Variable. In flask, you can set your secret key like this: app.config[&quot;SEVRET_KEY&quot;] = os.environ_get(&quot;SECRET_KEY&quot;) The way to add environment variable is:export SECRET_KEY=xxxxxxxxx (for Mac)set SECRET_KEY=xxxxxxxxx (for Windows) SQLStore PasswordsDon’t directly store the password in the database. Instead of directly store the password in the data base, you should store the hash version of password in the database. SQL InjectionWherever you are making SQL queries, either use a library or do the escape yourself to prevent you from SQL injection attack. JavaScriptCross-Site Scripting: Attackers will inject client-side scripts into web pages viewed by other users. e.g. In Flask If your code is like this: 123@app.route(&apos;/&lt;string:name&gt;&apos;)def hello(name): return &quot;Hello,&quot;+name When a viewer typed in /&lt;script&gt;alert(&#39;hi&#39;)&lt;/script&gt; An alert ‘hi’ will be raised. This can also happens when you have a form for a user to submit. Solution:For url inject, check “&lt;” and “&gt;” whenever you receive a request. For form submit, add CSRF token. CSRF token is a secret, user-specific token in all form submissions. ScalabilityBenchmarkingA test to see how many user can a server support. Solotions: Vertical Scaling: Get a bigger server Horizontal Scaling: Get more server Problems for Horizontal Scaling How does the server communicate with each other? Which server does the user go to when the come to the website? Solution: add a load balancer Load BalancingMethods to assign connections: Random Choice Round Robin Fewest Connections Session-Aware Load BalancingUser may store some information on the server, what happen when he goes to another server next time? So you need to store the session information. There are three ways to store them. Sticky Sessions (User always go to the same place) Sessions in Database Client-Side Sessions AutoscalingDynamically add servers to the Load Balancer. Use some sort of ping or heartbeat to make sure when a server is down, the load balancer knows. Scaling Databases But there’s another problem raised, a single database can only communicate with a limit number of connections. We use Database Replication to solve this problem Database ReplicationSingle-Primary Replication In single-primary replication, you can read from a number of database but can only read from one database. The you update other database from the writable database. This only solve the read problem but does not solve the write problem. Multi-Primary Replication Multi-Primary Replication solve the problem of read and write at the same time, but raise another problem: what if there’s conflicts? There can be a Git like system to solve this. CachingIf we can store the data in some other place, we may not need to access the data base so often. Client-Side CachingCache-ControlInside the HTTP headers, there’s a header called “Cache-Control”, where you can set the time of the data cache in the computer. Cache-Control: max-age=86400 means that if the user refresh the page less than 86400s after the first request, the browser will not make a request and use the cache data. ETagETag is a tag that is unique for each version of a big file on the server. When a big file is sent to the client, the ETag will be attached. When a browser make a request with the ETag, the web applictaion will not send it again if it is the latest version of that file. Server-Side Caching When there’s request to the database, the web applictaion will save a copy of it and the request inside of Cache, so the server can get the data more quickly in the cache and make less requests to the database.]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>security</tag>
        <tag>scalability</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond React]]></title>
    <url>%2F2019%2F08%2F17%2Fnote%2FCS50%20Beyond%2Freact%2F</url>
    <content type="text"><![CDATA[DeclarativeWrite code to tell the computer the way we want the web application to look like.JSXAn extension of JavaScript.In JSX we can treat HTML elements as values of their own. Packages React(The React library) ReactDOM(Insert React components into webpage) Babel(Translate JSX into JS) Scripts CDN: 123456React:&lt;script src=&quot;https://cdn.staticfile.org/react/16.4.0/umd/react.development.js&quot;&gt;&lt;/script&gt;ReactDOM:&lt;script src=&quot;https://cdn.staticfile.org/react-dom/16.4.0/umd/react-dom.development.js&quot;&gt;&lt;/script&gt;Babel:&lt;script src=&quot;https://cdn.staticfile.org/babel-standalone/6.26.0/babel.min.js&quot;&gt;&lt;/script&gt; ComponentsBasic Structure123class Hello extends React.Component &#123;&#125; The Hello class is a React component. Each component need something to determine what should show up on the page, so each component needs a render function. 12345class Hello extends React.Component &#123; render() &#123; return &lt;p&gt;Hello!&lt;/p&gt;; &#125;&#125; So now all Hello class does is display a p tag. Example112345678910111213&lt;div id=&quot;codeexample1&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/babel&quot;&gt; class Hello extends React.Component &#123; render() &#123; return ( &lt;p&gt; This is render by React! &lt;/p&gt; ); &#125; &#125; ReactDOM.render(&lt;Hello /&gt;, document.querySelector(&quot;#codeexample1&quot;));&lt;/script&gt; class Hello extends React.Component { render() { return ( This is render by React! ); } } ReactDOM.render(, document.querySelector("#codeexample1")); Example2123456789101112131415161718192021222324&lt;div id=&quot;codeexample2&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/babel&quot;&gt; class Hello extends React.Component &#123; render() &#123; return ( &lt;p&gt; This is render by React! &lt;/p&gt; ); &#125; &#125; class App extends React.Component &#123; render() &#123; return ( &lt;div&gt; &lt;Hello/&gt; &lt;p&gt;Above and below are two Hello class.&lt;/p&gt; &lt;Hello/&gt; &lt;/div&gt; ) &#125; &#125; ReactDOM.render(&lt;App /&gt;, document.querySelector(&quot;#codeexample2&quot;));&lt;/script&gt; class Hello extends React.Component { render() { return ( This is render by React! ); } } class App extends React.Component { render() { return ( Above and below are two Hello class. ) } } ReactDOM.render(, document.querySelector("#codeexample2")); PropertiesSome arguments that attached to a class. Example3123456789101112131415161718192021222324&lt;div id=&quot;codeexample3&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/babel&quot;&gt; class Hello extends React.Component &#123; render() &#123; return ( &lt;p&gt; This is &#123;this.props.count&#125; &#123;this.props.name&#125; &lt;/p&gt; ); &#125; &#125; class App extends React.Component &#123; render() &#123; return ( &lt;div&gt; &lt;Hello count=&quot;Number1&quot; name=&quot;Hello Class&quot;/&gt; &lt;Hello count=&quot;Number2&quot; name=&quot;Hello Class&quot;/&gt; &lt;Hello count=&quot;Number3&quot; name=&quot;Hello Class&quot;/&gt; &lt;/div&gt; ) &#125; &#125; ReactDOM.render(&lt;App /&gt;, document.querySelector(&quot;#codeexample3&quot;));&lt;/script&gt; class Hello extends React.Component { render() { return ( This is {this.props.count} {this.props.name} ); } } class App extends React.Component { render() { return ( ) } } ReactDOM.render(, document.querySelector("#codeexample3")); Set the default value: Change This is {this.props.name} to This is {this.props.name || &quot;Hello Class&quot;} So now you can use the Hello class without “name”: &lt;Hello count=&quot;Number3&quot;/&gt; StateIn React, if you change the state of the application, the view of the application is going to change based on that.So if you want to update the page, just change the state of the application, no need to refresh the whole page. Construction FunctionConstruction function is a function Similar to the function __init__ in python.In React, construction function is constructor(props) e.g. 12345class Counter extends React.Component &#123; constructor(props) &#123; super(props); &#125;&#125; Because we are extending the React.Component, and our React codes for our components to work need to use these props, we need to add a line of code super(props); Example4A counter class. 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;div id=&quot;codeexample4&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/babel&quot;&gt; class Counter extends React.Component &#123; constructor(props) &#123; super(props); this.state = &#123; count: 0 &#125; &#125; render() &#123; return ( &lt;div&gt; &lt;p&gt;&#123;this.state.count&#125;&lt;/p&gt; &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/button&gt; &lt;button onClick=&#123;this.dncrement&#125;&gt;-&lt;/button&gt; &lt;/div&gt; ); &#125; increment = () =&gt; &#123; this.setState(oldState =&gt; (&#123; count: oldState.count+1 &#125;)); &#125; dncrement = () =&gt; &#123; this.setState(oldState =&gt; (&#123; count: oldState.count-1 &#125;)); &#125; &#125; class App extends React.Component &#123; render() &#123; return ( &lt;div&gt; &lt;Counter /&gt; &lt;Counter /&gt; &lt;Counter /&gt; &lt;/div&gt; ) &#125; &#125; ReactDOM.render(&lt;App /&gt;, document.querySelector(&quot;#codeexample4&quot;));&lt;/script&gt; class Counter extends React.Component { constructor(props) { super(props); this.state = { count: 0 } } render() { return ( {this.state.count} + - ); } increment = () => { this.setState(oldState => ({ count: oldState.count+1 })); } dncrement = () => { this.setState(oldState => ({ count: oldState.count-1 })); } } class App extends React.Component { render() { return ( ) } } ReactDOM.render(, document.querySelector("#codeexample4")); NOTE: In React, you are not allow to modify the state directly, you need to use the setState function to change the state. oldState: It is considered a poor design to reference this.state inside of the setState function. Because this may cause a race condition where you run two setState function at a similar time.In practice, you should use a function to take in the state first, then change it based on your new function.This function often called oldState So now when you render many Counter components, you can have many counters and each counter has its own state. Ternary Operator: condition ? expressionIfTrue : expressionIfFalse Some Useful JS ToolsList OperationCopy of a List12const list1 = [1, 2, 3, 4, 5];const list2 = [...list1]; Copy Then Add12const list1 = [1, 2, 3, 4, 5];const list2 = [...list1, 6]; Delete From List1234const list1 = [1, 2, 3, 4, 5];list1.splice(3, 1);// Starting from index 3, pull out 1 argument.// list1 is now [1, 2, 3, 5] NodeWhen you actually deploy your website, you would not want the browser to translate your JSX code everytime when someone open the webpage.You need something to translate the JSX code to JS code before deploy for you. An app “create-react-app” is recommended. To install the “create-react-app”, you need Node.js. After you install the “create-react-app”, you can create a new React application just by type in create-react-app Name-of-the-app in the CLI. After you modify your code in the “src” directory, run npm run build, the program will build your application for you. Include translate JSX to JS.]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond Javascript]]></title>
    <url>%2F2019%2F08%2F16%2Fnote%2FCS50%20Beyond%2Fjs%2F</url>
    <content type="text"><![CDATA[Two Ways of Adding JS in HTMLScript Tag123&lt;script&gt; your JS code&lt;/script&gt;Seperate File1&lt;script src=&quot;xxx.js&quot;&gt;&lt;/script&gt; NOTE: JS code can be added everywhere in the HTML file, not only in the &lt;head&gt; tag. HTML file is loaded from top to bottom. Be careful because the location of your JS code may cause bugs in your webpage. Call the JavaScript CodeCall in the HTML1&lt;button event_name=&quot;function_name&quot;&gt;xxx&lt;/button&gt; Call in the JS fileUse querySelector. DOM(Document Object Model) ManipulationquerySelectorSelect the first element in the document. document.querySelector(&#39;tag&#39;) document.querySelector(&#39;#id&#39;) document.querySelector(&#39;.class&#39;) querySelector returns an object. object.innerHTML is the content of the element. So object.innerHTML = xxx can change the content of the element to xxx. You can also modify the style by object.style.xxx NOTE: If you want to select every element in the document, use querySelectorAll, it will return an array of object. addEventListenerdocument.addEventListener(&quot;DOMContentLoaded&quot;, function) the function you passed in will be executed after all the DOM content loaded. Used to fix the problem that JS code loaded at the front of the HTML document. Arrow Functionsx =&gt; x*2 Takes the left of the arrow and output the right of the arrow. Local StorageLocal storage is a place where you can save the data locally forever. It’s about 5M. You can use this feature to save your data so that it won’t change when the user refresh the page. Command Purpose localStorage.setItem(&quot;temp&quot;, arr) Save arr locally to “temp” localStorage.getItem(&quot;temp&quot;) Get the data in “temp” localStorage.removeItem(&quot;temp&quot;) Remove “temp” localStorage.clear() Clear local storage Window Property Description window.innerHeight Returns the height of the window’s content area window.innerWidth Returns the width of the window’s content area window.scrollY Returns the pixels that the current document has been scrolled from the top of the window document.body.offSetHeight Returns the height of the whole document AnimationCSS AnimationKeyframeIn &lt;style&gt; tag. Code123456789101112131415161718192021222324252627@keyframes grow &#123; 0% &#123; left: 0%; color: red; font-size: 14px; &#125; 50% &#123; left: 50%; color: blue; font-size: 20px; &#125; 100% &#123; left: 0%; color: green; font-size: 26px; &#125;&#125; .example &#123; position: relative; animation-name: grow; animation-fill-mode: forwards; animation-duration: 3s; animation-iteration-count: infinite; &#125;&#125;&lt;p class=&quot;example&quot;&gt;Hello!&lt;/p&gt; Effect @keyframes grow { 0% { left: 0%; color: red; font-size: 14px; } 50% { left: 50%; color: blue; font-size: 20px; } 100% { left: 0%; color: green; font-size: 26px; } } .example { position: relative; animation-name: grow; animation-fill-mode: forwards; animation-duration: 3s; animation-iteration-count: infinite; } } Hello! SVGSVG is the abbreviation of Scalable Vector GraphicsSVG is resolution independent, the resolution of it won’t change when zoom in. The following code is based on the d3.js library Draw Elements 1234567891011&lt;svg id=&quot;svgexample1&quot; stylt=&quot;width:100%; height:800px&quot;&gt;&lt;/svg&gt;&lt;script&gt;const svg = d3.select(&apos;#svgexample1&apos;);svg.append(&apos;circle&apos;) .attr(&apos;cx&apos;, 200) (center x) .attr(&apos;cy&apos;, 75) (center y) .attr(&apos;r&apos;, 50) (radius) .style(&apos;fill&apos;, &apos;red&apos;); (filled color)&lt;/script&gt; const svg = d3.select('#svgexample1'); svg.append('circle') .attr('cx', 200) .attr('cy', 75) .attr('r', 50) .style('fill', 'red'); Animation123456789101112131415161718&lt;svg id=&quot;svgexample2&quot; stylt=&quot;width:100%; height:800px&quot;&gt;&lt;/svg&gt;&lt;script&gt;const svg = d3.select(&apos;#svgexample2&apos;);const c = svg.append(&apos;circle&apos;) .attr(&apos;cx&apos;, 200) .attr(&apos;cy&apos;, 75) .attr(&apos;r&apos;, 25) .style(&apos;fill&apos;, &apos;red&apos;);c.transition() .duration(1000) .attr(&apos;cx&apos;, 500) .style(&apos;fill&apos;, &apos;green&apos;) .attr(&apos;r&apos;, 50)&lt;/script&gt; The Code above will draw a red circle whose radius is 25, then the circle will move to the right while becomming bigger and turning ino green.]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond HTML and CSS]]></title>
    <url>%2F2019%2F08%2F15%2Fnote%2FCS50%20Beyond%2Fcss%2F</url>
    <content type="text"><![CDATA[HTMLHTML5 featuresCommon HTML elements tag usage &lt;h1&gt;, ..., &lt;h6&gt; header tag &lt;ol&gt;, &lt;ul&gt; order list/ unorder list &lt;img&gt; image tag &lt;a&gt; anchor tag(often for href) &lt;p&gt; paragraph tag &lt;table&gt; paragraph tag &lt;th&gt; table header &lt;tr&gt; table row &lt;td&gt; table data &lt;form&gt; form tag ID attributeInsert in any tag. In &lt;a&gt; tag, href=”#the ID of that place“ can create a link to that specific place.ID can only be used once in the same page. New HTML5 Featurescontenteditablecontenteditable is an attribute of paragraph Code1&lt;p contenteditable=&quot;true&quot;&gt;This paragraph is editable&lt;/p&gt; EffectThis paragraph is editable datalistdatalist is a tag, it enables auto complete Code1234567891011&lt;div&gt; &lt;input name=&quot;junk&quot; list=&quot;some junk&quot; /&gt; &lt;datalist id=&quot;some junk&quot;&gt; &lt;option value=&quot;aa11&quot;&gt; &lt;option value=&quot;ab12&quot;&gt; &lt;option value=&quot;ac13&quot;&gt; &lt;option value=&quot;bc23&quot;&gt; &lt;option value=&quot;ca31&quot;&gt; &lt;option value=&quot;cb32&quot;&gt; &lt;/datalist&gt;&lt;/div&gt; Effect patternpattern is an attribute of the input tagIt accept a regular expression Code1234&lt;form&gt; &lt;input pattern=&quot;.*\..*&quot; placeholder=&quot;something.something&quot;&gt; &lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;&lt;/form&gt; NOTE: Don’t use pattern as the only verification process. Users can modify the source code to bypass that. Never trust your user. Effect Submit Regular Expressions Use in string searching algorithms Basic Operations Concatenation Alternation Kleene Star Expression Matches hi hi hi|hello hi or hello hi? h or hi hi* h/hi/hii/hiii/... (from 0 to infinite) hi+ hi/hii/hiii/... (from 1 to infinite) hi{3} hiii . anything \./\+/… ./+ \ is the escape character \s white space [a-z]/[A-Z]/[0-9] a to z/A to Z/0 to 9 NOTE: Those marks only apply on the one before them CSSCSS Properties color text-align width, height margin, padding font-family, font-size, font-weight border Styling WaysInline Styling: 123456789&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;Style&lt;/tile&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 style=&quot;color:red;&quot;&gt;This is red&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; Use of Selector: 1234567891011121314&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;Style&lt;/tile&gt; &lt;style&gt; h1 &#123; color:red; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;This is red&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; Selector Selector Example Description element h1 Select every h1 element .class .welcome Select every element whose class is welcome #id #welcome Select the element whose id is welcome element, element h1, div Select every h1 and div element element element div h1 Select every h1 that is inside div element&gt;element div&gt;h1 Select every h1 that is an immediate children of div element+element div+h1 Select every h1 that is right after div [attribute=value] [target=1] Select every element that has target=1 :hover button:hover Acts when a button has the cursor hover over it CSS Box ModelAll element in the HTML has a border. Outside of the border there is comething called the Margin. Inside the border there is something called Padding. Responsive DesignViewport: The visible area of the webpage on the screen 1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width initial-sacle=1.0&quot;&gt; width=device-width means that the width of the webpage is equal to the device’s widthinitial-scale=1.0 means that at the beginning, do not zoom the webpage Media Query: Let you customize the CSS you use based upon the type of the media of the user that is viewing the page. Inside the “Style tag” 123@media (min-width 500px) &#123; Just the same as others&#125; The above only got to apply when the page is at least 500 pixels wide 123@media (max-width 499px) &#123; Just the same as others&#125; The above only got to apply when the page is at most 499 pixels wide 123@media print &#123; Just the same as others&#125; The above only got to apply when the page is printed out Flex Box: It is a technology that automatically wrap the page for you. Inside the “Style” tag 1234selector &#123; display: flex; flex-wrap: wrap;&#125; Grid Model: Display like grid Inside the “Style” tag 1234567selector &#123; display: grid; flex-wrap: wrap; grid-column-gap: xxx; (in pixel) grid-row-gap: xxx; (in pixel) grid-template-columns: xxx;&#125;]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>html</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CS50 Beyond Git and Github]]></title>
    <url>%2F2019%2F08%2F15%2Fnote%2FCS50%20Beyond%2Fgit%2F</url>
    <content type="text"><![CDATA[Git Commands command usage git clone &lt;url&gt; Clone the repository to local git init initiallize a repository locally git add &lt;filename&gt; add the file to the workspace git commit -m &quot;message&quot; commit the change in the workspace git status Show the status of your files git push push to remote repository git pull pull from remote repository git commit -am &quot;message&quot; add every untracked file into workspace then commit git log show the log of git change git reset --hard &lt;commit&gt; go back for one version git branch show the branches that currently have git checkout -b &lt;branch name&gt; create a new branch git checkout &lt;branch name&gt; switch to an existed branch git merge &lt;branch name&gt; merge current branch with that branch git branch -D &lt;branch name&gt; delete the branch Pull RequestIn industry, they don’t let everyone to modify the code base, instead, you should make change on different branch and then summit a pull request so that someone else can do a review and comment and then merge the branches. So pull request is a request to merge your branch into the master branch. And it is widely used in the inductry. SassSass is an extension of CSS that allows you to use variable and nesting. Link a seperate CSS file1&lt;link rel=&quot;stylesheet&quot; href=&quot;address of the css file&quot;&gt; VariableFor Sass file, file extension is .css $ as the mark of variable, $variable_name is a complete variable 12345$color: red;ul &#123; color=$color;&#125; Above is a complete SASS file. CompileSASS file can’t be directly linked to the HTML file. Download the SASS program then run it, it will convert SASS file to CSS file for you. Use the command sass xxx.scss xxx.css Nesting1234567891011div &#123; xxxxxx p &#123; xxxxx &#125; ul &#123; xxxxx &#125;&#125; You can use the above code to directly apply CSS to that structure in Sass. InheritenceInheritence in Sass use the % sign. 12345678910%extend &#123; xxx xxx&#125;#id &#123; @extend %extend; xxx xxx&#125; Properties in %extend will also effect in #id]]></content>
      <categories>
        <category>note</category>
        <category>CS50 Beyond</category>
      </categories>
      <tags>
        <tag>CS50</tag>
        <tag>beyond</tag>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Tips]]></title>
    <url>%2F2019%2F08%2F13%2Fnote%2Fhexo%2Fhexotips%2F</url>
    <content type="text"><![CDATA[This post is aiming at storing some tips of useing hexo. ListsCode12345678910111. One2. Two3. Three* One* Two- One- Two - two spaces before the dash - two spaces before the dash The effect of the code above One Two Three One Two One Two two spaces before the dash two spaces before the dash ExtrasCode12- [x] This is a complete item- [ ] This is an incomplete item The effect of the code above This is a complete item This is an incomplete item TabsCode12345678&#123;% tabs tabs_name %&#125;&lt;!-- tab first tab@heart --&gt;first&lt;!-- endtab --&gt;&lt;!-- tab second tab--&gt;second&lt;!-- endtab --&gt;&#123;% endtabs %&#125; NOTICE: tabs must have unique name The effect of the code abovefirst tabsecond tabfirstsecond TableCode1234name | 111 | 222 | 333 | 444:-: | :-: | :-: | :-: | :-:aaa | bbb | ccc | ddd | eee|fff | ggg| hhh | iii | 000| The effect of the code above name 111 222 333 444 aaa bbb ccc ddd eee fff ggg hhh iii 000 Centered QuoteCode1&#123;% centerquote %&#125;This is Centered Quote&#123;% endcenterquote %&#125; Or 1&#123;% cq %&#125;This is Centered Quote&#123;% endcq %&#125; The effect of the code aboveThis is Centered Quote Full ImageThis tag enables you to exceed the container’s width. Code1&#123;% fullimage /hexo/hexo.svg, alt, title %&#125; Or 1&#123;% fi /hexo/hexo.svg, alt, title %&#125; The effect of the code above Bootstrap CalloutCode1&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125; class_name is one of the following: default | primary | success | info | warning | danger The effect of the code above Bootstrap Callout default Bootstrap Callout primary Bootstrap Callout success Bootstrap Callout info Bootstrap Callout warning Bootstrap Callout danger Include RawCode1&#123;% include_raw &apos;/404/404.md&apos; %&#125; This tag include any raw content into your posts. Path is relative to your site “source” directory. The effect of the code above404 Not Found(Just For Test) ButtonUsage1234567891011&#123;% button url, text, icon [class], [title] %&#125;&lt;!-- Tag Alias --&gt;&#123;% btn url, text, icon [class], [title] %&#125;url : Absolute or relative path to URL.text : Button text. Required if no icon specified.icon : FontAwesome icon name (without &apos;fa-&apos; at the begining). Required if no text specified.[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x Optional parameter.[title] : Tooltip at mouseover. Optional parameter. Code1&#123;% btn # ,This Page, home fa-2x, Just This Page%&#125; NOTE:It’s better to put them into the “&lt;div&gt;” tag, this may avoid some bug The effect of the code aboveThis Page Group PictureUsage12345&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;[group] : Total number of pictures to add in the group.[layout] : Default picture under the group to show. Code12345678&#123;% gp 6-3%&#125;![](hexo/github.png)![](hexo/github.png)![](hexo/github.png)![](hexo/github.png)![](hexo/github.png)![](hexo/github.png)&#123;% endgp %&#125; The effect of the code above LabelUsage123456&#123;% label [class]@Text %&#125;[class] : default | primary | success | info | warning | danger. &apos;@Text&apos; can be specified with or without space E.g. &apos;success @text&apos; similar to &apos;success@text&apos;. If not specified, default class will be selected. Code1&#123;% raw %&#125;&#123;% label default@default %&#125;&#123;% endraw %&#125; &#123;% raw %&#125;&#123;% label primary@primary %&#125;&#123;% endraw %&#125; &#123;% raw %&#125;&#123;% label success@success %&#125;&#123;% endraw %&#125; &#123;% raw %&#125;&#123;% label info@info %&#125;&#123;% endraw %&#125; &#123;% raw %&#125;&#123;% label warning@warning %&#125;&#123;% endraw %&#125; &#123;% raw %&#125;&#123;% label danger@danger %&#125; &#123;% raw %&#125;&#123;% label success@success%&#125;&#123;% endraw %&#125; The effect of the code abovedefault primary success info warning danger success VideoCode1&#123;% video url %&#125; PDFSettingsnext/_config.yml 1234pdf: enable: true # Default height height: 500px Usage1234&#123;% pdf url [height] %&#125;[url] : Relative path to PDF file.[height] : Optional. Height of the PDF display element, e.g. 800px. Code1&#123;% pdf hexo.pdf %&#125; NOTE: Unlike images, you don’t need to add your post assets folder in front of the address. The effect of the code above Referencehttps://theme-next.org/docs/tag-plugins/http://theme-next.iissnan.com/tag-plugins.htmlGithub Flavored Markdown]]></content>
      <categories>
        <category>note</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>tips</tag>
        <tag>note</tag>
        <tag>usage</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Insert Image in Hexo Blog]]></title>
    <url>%2F2019%2F08%2F13%2Farticle%2Fhexo%2Fimage%2F</url>
    <content type="text"><![CDATA[Modify ConfigModify post_asset_folder in _config.yml to true. Install packagesexecute npm install https://github.com/CodeFalling/hexo-asset-image --save and wait. WARNING: Some may tell you to install via npm install hexo-asset-image --save, don’t do that, that package has bug. Put in ImagesAfter those steps, when you create a new post, hexo will auto generate a folder under the same folder with the same name of your post. Put your images into the correct folder Use ItFirst WaySecond WayThird Way{% asset_img example.jpg examplename %}![description][1][1]:picture_path &quot;picture_name&quot; ]![description][picture_name]]]></content>
      <categories>
        <category>article</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>hexo</tag>
        <tag>image</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Some Escape for Jinja, Hexo and HTML]]></title>
    <url>%2F2019%2F08%2F12%2Fnote%2Fpython%2Fescape%2F</url>
    <content type="text"><![CDATA[Jinja takes “{{“, “}}“, “{%“, “%}“ as symbols for statements/expressions.So if you want to use these symbols in your text of a Jinja Templated HTML file, put them in 123&#123;% raw %&#125; your content&#123;% endraw %&#125; Hexo seems to use something like Jinja, so that also works when you are writing markdown file of hexo.Or Hexo will raise an “unexpected token” template render error. For some special symbol in HTML, like &amp;lt;(“&lt;”), &amp;gt;(“&gt;”) Change &amp; to &amp;amp;]]></content>
      <categories>
        <category>note</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>python</tag>
        <tag>flask</tag>
        <tag>template</tag>
        <tag>jinja</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Template and Static Folder Setting in Flask Blueprint]]></title>
    <url>%2F2019%2F08%2F12%2Farticle%2Fpython%2Fblueprint%2F</url>
    <content type="text"><![CDATA[Settings1bp = Blueprint(xxxxxxx, template_folder=&apos;templates&apos;, static_folder=&apos;static&apos;)How to UseFlask treat them differently:Template Folder For template folder, when you register your blueprint, flask will add the address of blueprint template folder into its config. All contents under all blueprint/original template folder will be treated as if they are in a same big folder “template”. If there are templates of the same name, Flask will search the original template folder first and then the blueprint folders. The solution is to create a folder with the same name in the blueprint’s template folder, so you can use it like your static folder. Static FolderFor static folder, the blueprint’s static folder address will be register to the blueprint. So you can reference it wherever in your Flask app by: &quot;blueprintName&quot;.static]]></content>
      <categories>
        <category>article</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
        <tag>blueprint</tag>
        <tag>template</tag>
        <tag>static</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Update Bokeh Figure's X/Y Range]]></title>
    <url>%2F2019%2F08%2F12%2Fnote%2Fpython%2Fxrange%2F</url>
    <content type="text"><![CDATA[To update bokeh figure’s x_range/y_range, you should use: 1234&quot;plotname&quot;.x_range.start = xxx&quot;plotname&quot;.x_range.end = xxx&quot;plotname&quot;.y_range.start = xxx&quot;plotname&quot;.y_range.end = xxx]]></content>
      <categories>
        <category>note</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>bokeh</tag>
        <tag>figure</tag>
        <tag>range</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Properties of Bokeh Daterangeslider that Helps Develop]]></title>
    <url>%2F2019%2F08%2F10%2Farticle%2Fpython%2Fdaterangeslider%2F</url>
    <content type="text"><![CDATA[IntroductionThis article is about two special property of Daterangeslider in bokeh, which can help develop your bokeh app.My bokeh version is 1.3.1.Body According to the official documentation, Bokeh Daterangeslider has two property method: value_as_date and value_as_datetime. Normally, when you called the on_change callback function, bokeh will return you a tuple of Unix timestamp in miliseconds. It’s very inconvinient to change the format of the datetime. So you can call daterangeslider.value_as_date or daterangeslider.value_as_datetime (remember this is property not method) in your callback function. Both will return you a tuple of datetime.date object, which can be conveniently turned into any format of datetime via its own strftime method. Yet anothor way of using property method doesn’t work. You can’t simply pass in value_as_date or value_as_datetime in the on_change method. e.g. daterangeslider.on_change(&quot;value_as_date&quot;, on_change) This will raise an error]]></content>
      <categories>
        <category>article</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>bokeh</tag>
        <tag>daterangeslider</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Embed Bokeh Application in Flask]]></title>
    <url>%2F2019%2F08%2F10%2Farticle%2Fpython%2Fembed%2F</url>
    <content type="text"><![CDATA[This article is based on the official document of Bokeh and is about embed bokeh application in flask using app sessions.What you need to do is to pull a session from a bokeh server, turn it into script and insert it into your template. So you need to set up a bokeh server first. bokeh serve --show &quot;your bokeh file address&quot; Keep it open. Due to Bokeh’s safety settings, you need to set allow web-socket origin to avoid errors when you are setting up your bokeh server. 123bokeh serve --show &quot;your bokeh file address&quot;--allow-websocket-origin=localhost:5006 (This is bokeh server&apos;s default port, if you reset the port, change it to the port you set)--allow-websocket-origin=&quot;your web page address that you want to embed your bokeh app&quot; Then you need to complete your route function: 1234def bkapp_page(): with pull_session(url=&quot;http://localhost:5006/&#123;your bokeh file name&#125;&quot;) as session: script = server_session(session_id=session.id, url=&apos;http://localhost:5006/&#123;your bokeh file name&#125;&apos;) (As the above, change the port if you reset it yourself) return render_template(&quot;your template&quot;, script=script, template=&quot;Flask&quot;) Don’t forget to import the functions you need 12from bokeh.client import pull_sessionfrom bokeh.embed import server_session Finally, put the script into your template. In the body part of the template: Put in: {{script|indent(n)|safe}} “{{}}“ is the jinja representation of codescript is the script that you put in the render_template functionindent(n) means the number of spaces of where you put your script (Just for beautify your code)safe means that Jinja won’t take care of some illegal symbol for you(like “&lt;&gt;”, which normally will be turned into “&lt;” and “&gt;”) So now you complete embed your bokeh app in your flask app. Run your app.py for a test!]]></content>
      <categories>
        <category>article</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
        <tag>bokeh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Deploy a Flask app to Tencent Cloud]]></title>
    <url>%2F2019%2F07%2F17%2Farticle%2Fcloud%2Fdeploy%2F</url>
    <content type="text"><![CDATA[This article is about my way to deploy my own flask app on cloud.I use the service provided by Tencent Cloud, which uses CentOS 7.2 as the operating system of the CVM.I use gunicorn to deploy the my flask app and use nginx to do reverse proxy. 1234Install python3 and set symbolic linksCreate virtual environmentInstall and configure NginxInstall and configure gunicorn Install Python3CentOS 7.2 uses python 2.7.5 to support the “yum” command. So what we have to do is: 123Install Python3Set default python version to 3Set default python version of yum to 2 Preinstall Packages123456789yum install gcc gcc-c++ # C compiler that used to compile pythonyum install make # C make libraryyum install -y openssl openssl-devel openssl-static # SSL support packageyum install bzip2-devel # decompression support packageyum install expat-devel # XML document resolve packageyum install gdbm-devel # gdbm database libraryyum install readline-devel # Auto complete support packageyum install sqlite-devel # sqlite support packageyum groupinstall -y &quot;Development tools&quot; # install development tools InstallI choose python version 3.6.4 because it is stable.Download 1wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz Decompress 1tar -zxvf Python-3.6.4.tgz Change directory 1cd Python-3.6.4 Configure and Install 12./configure prefix=/usr/local/python3make &amp;&amp; make install Create symbolic links for python and pip12ln -s /usr/local/python3/bin/python3 /usr/bin/pythonln -s /usr/local/python3/bin/pip3 /usr/bin/pip -s: for symbolic links/usr/local/python3/bin/python3: source directory/usr/bin/python: target directory So now when you type python, you’ll call python3, and python2 for python2. You can call python -V and python2 -V to check that. Because yum still needs python2, we need to change yum’s configuration file. Type ls -ol yum* to find the configuration file. Do the following change to all the file listed: #!/usr/bin/python –&gt; #!/usr/bin/python2 You may use vi editor vi yum (vi+directory) to edit them. Virtual EnvironmentWhen using two different version of the same package, virtual environment can prevent you from keeping installing can uninstalling the packages. Install virtualenvpip install virtualenv to install Create virtual environment1/usr/local/python3/bin/virtualenv -p /usr/bin/python3 venv /usr/local/python3/bin/virtualenv: the directory of the virtualenv package/usr/bin/python3: the base of your virtual environmentvenv: the name of the virtual environment This command will create a virtual environment under the current directory. source venv/bin/activate activate the virtual environment, venv is the name of your virtual environment deactivate exit the current virtual environment Install Python Packagesuse pip install xxx, xxx is the package you want to install pip install -r requirement.txt when you have all your requirement in the requirement.txt file To generate requirement.txt, pip freeze &gt; requirements.txt in your own computer gunicornInstallWhen the virtual environment is activate, run pip install gunicorn Start the service1gunicorn -w 4 [-D] -b 127.0.0.1:8000 wsgi:application -w: the number of progress you want gunicorn to start-D: start the service background-b: bind your service to the certain IP, you should put tour LAN IP with the port you want to specify here.wsgi: the manage filename of your flask appapplication: the variable name in your flask app NginxInstall Nginx1yum install nginx After installation, use rpm -ql nginx to check the installation directory. commands of Nginx 1234567service nginx startservice nginx stopservice nginx restartservice nginx reload # reload the service after changing the configuration file Now you can see the Nginx welcome page when you type in your WAN IP in your own brower. Change Configuration FileThe configuration file is located in /etc/nginx/nginx.conf use vi editor to edit vi /etc/nginx/nginx.conf change the “server” section to the following 12345678910server &#123; listen 80; # the port you want Nginx to listen server_name &quot;the url of your website&quot;; location / &#123; proxy_pass &quot;the LAN and port you specify in gunicorn&quot;; proxy_set_header Host $&quot;the port you specify in gunicorn&quot;; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125;&#125; Finally, service nginx reload to end config Kill Process When Something Happenedpstree -ap | grep gunicorn to show processes associate with gunicornkill -9 xxx “xxx” is the pid showed above, kill the processesnetstat -ntlp to show all the ports that is occupied]]></content>
      <categories>
        <category>article</category>
        <category>cloud</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
        <tag>gunicorn</tag>
        <tag>nginx</tag>
        <tag>centos</tag>
        <tag>deploy</tag>
        <tag>cloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Crawler that Deal with ajax]]></title>
    <url>%2F2019%2F07%2F06%2Farticle%2Fpython%2Fajax%2F</url>
    <content type="text"><![CDATA[Have you met this problem? When you are going to crawl down some data from a website, you find nothing in the source code? When searching on the search engines, you may encounter the word “ajax”. According to Wikipedia, ajax is a web technologies on the client side to create asynchronous web applications. It means that the web page can load the data without refresh the whole page. I will walk through the path that I crawl ajax data. Hope this can inspire you when designing your own program. Follow the Common WayMy goal is to crawl down the op.gg “Game Stat by Champion” page’s data. Check the Source CodeFirst, open Chrome, press ctrl+U to callout the source code. We try to search the first champions’ name “Sivir”. There is no “Sivir” in the source code. That means the website used some technique to load the data after the page is loaded. It’s now to take out our most powerful tool – Chrome DevTools Use Chrome DevToolsChrome DevTools is a set of web developer tools built in the Google Chrome browser. DevTools can help us analyse the website’s structure. NetworkWe notice that there’s some query buttons above the chart. The network page enables us to monitor all the queries and links that is activate after we turn the DevTools on. So we callout the network page and click those query buttons. We get this: https://www.op.gg/statistics/ajax2/champion/ We clicked it, found data in it. But our job is not done yet. No matter what button we clicked, we always get the same url, the same data. It seems that we missed some query values. It’s time for elements. ElementsIn the elements, find where the buttons are. We can easily find that there’s several “Cell” td class and “ButtonWrap” div class in each “Cell” class. Look inside the “RadioButton” class, we can find the query values. “name” is the query name, in this case it is “period”, and “value” is the query value, in this case it is “week”. So we can get an url https://www.op.gg/statistics/ajax2/champion/period=week and it works. Look through all “Cell” class and then we can get all the query names and query values. Then we can get all the data. ConclusionThe way to get data from ajax loading page is:123Search the source code.Activate query and monitor connection using NetworkInspect Elements to get query names and values]]></content>
      <categories>
        <category>article</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>crawler</tag>
        <tag>ajax</tag>
        <tag>op.gg</tag>
      </tags>
  </entry>
</search>
